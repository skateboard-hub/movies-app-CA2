{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\Project\\\\VS code\\\\movies-api-CA2\\\\reactApp\\\\src\\\\pages\\\\favoriteMoviesPage.js\";\nimport React, { useContext, useState } from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { MoviesContext } from \"../contexts/moviesContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner';\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\nimport WriteReview from \"../components/cardIcons/writeReview\";\nimport Header from \"../components/headerMovieList\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport { useTheme } from \"@mui/material/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FavoriteMoviesPage = () => {\n  const {\n    favorites: movieIds\n  } = useContext(MoviesContext);\n  const context = useContext(MoviesContext);\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  // Create an array of queries and run in parallel.\n  const favoriteMovieQueries = useQueries(movieIds.map(movieId => {\n    return {\n      queryKey: [\"movie\", {\n        id: movieId\n      }],\n      queryFn: getMovie\n    };\n  }));\n\n  // Check if any of the parallel queries is still loading.\n  const isLoading = favoriteMovieQueries.find(m => m.isLoading === true);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  const movies = favoriteMovieQueries.map(q => {\n    q.data.genre_ids = q.data.genres.map(g => g.id);\n    return q.data;\n  });\n  let isLog = context.isLog;\n  const submitContent2 = e => {\n    e.preventDefault();\n    context.changeLogState(input);\n  };\n  let input = ['username', 'password'];\n  const combineContent = e => {\n    e.preventDefault();\n    switch (e.target.name) {\n      case \"username\":\n        input[0] = e.target.value;\n        break;\n      case \"password\":\n        input[1] = e.target.value;\n        break;\n      default:\n        break;\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PageTemplate, {\n      title: \"Favorite Movies\",\n      movies: movies,\n      action: movie => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(RemoveFromFavorites, {\n            movie: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(WriteReview, {\n            movie: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\nexport default FavoriteMoviesPage;","map":{"version":3,"names":["React","useContext","useState","PageTemplate","MoviesContext","useQueries","getMovie","Spinner","RemoveFromFavorites","WriteReview","Header","Grid","Box","TextField","Button","Card","useTheme","useMediaQuery","Navigate","useLocation","Link","FavoriteMoviesPage","favorites","movieIds","context","userName","setUserName","password","setPassword","theme","isMobile","breakpoints","down","favoriteMovieQueries","map","movieId","queryKey","id","queryFn","isLoading","find","m","movies","q","data","genre_ids","genres","g","isLog","submitContent2","e","preventDefault","changeLogState","input","combineContent","target","name","value","movie"],"sources":["C:/Personal/Project/VS code/movies-api-CA2/reactApp/src/pages/favoriteMoviesPage.js"],"sourcesContent":["import React, { useContext,useState } from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { MoviesContext } from \"../contexts/moviesContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner'\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\nimport WriteReview from \"../components/cardIcons/writeReview\";\nimport Header from \"../components/headerMovieList\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport { useTheme } from \"@mui/material/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\n\n\nconst FavoriteMoviesPage = () => {\n  const { favorites: movieIds } = useContext(MoviesContext);\n  const context = useContext(MoviesContext);\n\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n\n\n\n\n\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  // Create an array of queries and run in parallel.\n  const favoriteMovieQueries = useQueries(\n    movieIds.map((movieId) => {\n      return {\n        queryKey: [\"movie\", { id: movieId }],\n        queryFn: getMovie,\n      };\n    })\n  );\n\n  // Check if any of the parallel queries is still loading.\n  const isLoading = favoriteMovieQueries.find((m) => m.isLoading === true);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  const movies = favoriteMovieQueries.map((q) => {\n    q.data.genre_ids = q.data.genres.map(g => g.id)\n    return q.data\n  });\n\n  let isLog = context.isLog;\n\n  const submitContent2 = (e) => {\n    e.preventDefault();\n    context.changeLogState(input);\n  };\n\n  let input = ['username', 'password'];\n\n  const combineContent = (e) => {\n    e.preventDefault();\n    switch (e.target.name) {\n      case \"username\":\n        input[0] = e.target.value;\n        break;\n      case \"password\":\n        input[1] = e.target.value;\n        break;\n      default:\n        break;\n    };\n  }\n\n  return (\n    <>\n\n        <PageTemplate\n          title=\"Favorite Movies\"\n          movies={movies}\n          action={(movie) => {\n            return (\n              <>\n                <RemoveFromFavorites movie={movie} />\n                <WriteReview movie={movie} />\n              </>\n            );\n          }}\n        />\n    </>\n  );\n};\n\nexport default FavoriteMoviesPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}