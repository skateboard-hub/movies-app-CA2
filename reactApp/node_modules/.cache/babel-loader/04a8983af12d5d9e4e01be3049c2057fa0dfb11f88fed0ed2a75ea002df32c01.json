{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\Project\\\\VS code\\\\movies-api-CA2\\\\reactApp\\\\src\\\\pages\\\\recommendPage.js\";\nimport React, { useContext, useState } from \"react\";\nimport { getMovies, getMovieById } from \"../api/movies-api\";\nimport PageTemplate from '../components/templateMovieListPage';\nimport { useQuery } from 'react-query';\nimport Spinner from '../components/spinner';\nimport AddToFavoritesIcon from '../components/cardIcons/addToFavorites';\nimport { useParams } from 'react-router-dom';\nimport { MoviesContext } from \"../contexts/moviesContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecommendPage = props => {\n  const [favoriteGenres, setFavoriteGenres] = useState([]);\n  const context = useContext(MoviesContext);\n  const {\n    page\n  } = useParams();\n  const {\n    data: pages,\n    error,\n    isLoading,\n    isError\n  } = useQuery([\"RecommendPage\"], getMovies);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  const movies = pages;\n  const favorites = movies.filter(m => m.favorite);\n  localStorage.setItem('favorites', JSON.stringify(favorites));\n  const addToFavorites = genre => {\n    let newFavorites = [];\n    if (!favoriteGenres.includes(genre.id)) {\n      newFavorites = [...favoriteGenres, genre.id];\n    } else {\n      newFavorites = [...favoriteGenres];\n    }\n    setFavoriteGenres(newFavorites);\n  };\n  context.favorites.map(json => {\n    getMovieById(json).then(json => {\n      json.genres.map(response => {\n        addToFavorites(genre);\n      });\n    });\n  });\n  movies.map(movie => {});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PageTemplate, {\n      title: \"Recommend Movies\",\n      movies: movies,\n      action: movie => {\n        return /*#__PURE__*/_jsxDEV(AddToFavoritesIcon, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 18\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\nexport default RecommendPage;","map":{"version":3,"names":["React","useContext","useState","getMovies","getMovieById","PageTemplate","useQuery","Spinner","AddToFavoritesIcon","useParams","MoviesContext","RecommendPage","props","favoriteGenres","setFavoriteGenres","context","page","data","pages","error","isLoading","isError","message","movies","favorites","filter","m","favorite","localStorage","setItem","JSON","stringify","addToFavorites","genre","newFavorites","includes","id","map","json","then","genres","response","movie"],"sources":["C:/Personal/Project/VS code/movies-api-CA2/reactApp/src/pages/recommendPage.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { getMovies, getMovieById } from \"../api/movies-api\";\r\nimport PageTemplate from '../components/templateMovieListPage';\r\nimport { useQuery } from 'react-query';\r\nimport Spinner from '../components/spinner';\r\nimport AddToFavoritesIcon from '../components/cardIcons/addToFavorites'\r\nimport { useParams } from 'react-router-dom';\r\nimport { MoviesContext } from \"../contexts/moviesContext\";\r\n\r\nconst RecommendPage = (props) => {\r\n  const [favoriteGenres, setFavoriteGenres] = useState([]);\r\n  const context = useContext(MoviesContext);\r\n  const { page } = useParams();\r\n  const { data: pages, error, isLoading, isError } = useQuery(\r\n    [\"RecommendPage\"],\r\n    getMovies\r\n  );\r\n  if (isLoading) {\r\n    return <Spinner />\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>\r\n  }\r\n  const movies = pages;\r\n\r\n  const favorites = movies.filter(m => m.favorite)\r\n  localStorage.setItem('favorites', JSON.stringify(favorites))\r\n\r\n  const addToFavorites = (genre) => {\r\n    let newFavorites = [];\r\n    if (!favoriteGenres.includes(genre.id)) {\r\n      newFavorites = [...favoriteGenres, genre.id];\r\n    }\r\n    else {\r\n      newFavorites = [...favoriteGenres];\r\n    }\r\n    setFavoriteGenres(newFavorites)\r\n  };\r\n\r\n  context.favorites.map((json) => {\r\n    getMovieById(json)\r\n      .then((json) => {\r\n        json.genres.map((response) =>{\r\n            addToFavorites(genre)\r\n        }\r\n        )\r\n\r\n      }\r\n      )\r\n  })\r\n\r\n\r\n  movies.map((movie) => {\r\n\r\n  })\r\n\r\n\r\n  return (\r\n    <>\r\n      <PageTemplate\r\n        title=\"Recommend Movies\"\r\n        movies={movies}\r\n        action={(movie) => {\r\n          return <AddToFavoritesIcon movie={movie} />\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default RecommendPage;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,SAAS,EAAEC,YAAY,QAAQ,mBAAmB;AAC3D,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,kBAAkB,MAAM,wCAAwC;AACvE,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,2BAA2B;AAAC;AAAA;AAE1D,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMa,OAAO,GAAGd,UAAU,CAACS,aAAa,CAAC;EACzC,MAAM;IAAEM;EAAK,CAAC,GAAGP,SAAS,EAAE;EAC5B,MAAM;IAAEQ,IAAI,EAAEC,KAAK;IAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGf,QAAQ,CACzD,CAAC,eAAe,CAAC,EACjBH,SAAS,CACV;EACD,IAAIiB,SAAS,EAAE;IACb,oBAAO,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EACpB;EAEA,IAAIC,OAAO,EAAE;IACX,oBAAO;MAAA,UAAKF,KAAK,CAACG;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM;EACjC;EACA,MAAMC,MAAM,GAAGL,KAAK;EAEpB,MAAMM,SAAS,GAAGD,MAAM,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC;EAChDC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACP,SAAS,CAAC,CAAC;EAE5D,MAAMQ,cAAc,GAAIC,KAAK,IAAK;IAChC,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAI,CAACrB,cAAc,CAACsB,QAAQ,CAACF,KAAK,CAACG,EAAE,CAAC,EAAE;MACtCF,YAAY,GAAG,CAAC,GAAGrB,cAAc,EAAEoB,KAAK,CAACG,EAAE,CAAC;IAC9C,CAAC,MACI;MACHF,YAAY,GAAG,CAAC,GAAGrB,cAAc,CAAC;IACpC;IACAC,iBAAiB,CAACoB,YAAY,CAAC;EACjC,CAAC;EAEDnB,OAAO,CAACS,SAAS,CAACa,GAAG,CAAEC,IAAI,IAAK;IAC9BlC,YAAY,CAACkC,IAAI,CAAC,CACfC,IAAI,CAAED,IAAI,IAAK;MACdA,IAAI,CAACE,MAAM,CAACH,GAAG,CAAEI,QAAQ,IAAI;QACzBT,cAAc,CAACC,KAAK,CAAC;MACzB,CAAC,CACA;IAEH,CAAC,CACA;EACL,CAAC,CAAC;EAGFV,MAAM,CAACc,GAAG,CAAEK,KAAK,IAAK,CAEtB,CAAC,CAAC;EAGF,oBACE;IAAA,uBACE,QAAC,YAAY;MACX,KAAK,EAAC,kBAAkB;MACxB,MAAM,EAAEnB,MAAO;MACf,MAAM,EAAGmB,KAAK,IAAK;QACjB,oBAAO,QAAC,kBAAkB;UAAC,KAAK,EAAEA;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG;MAC7C;IAAE;MAAA;MAAA;MAAA;IAAA;EACF,iBACD;AAEP,CAAC;AACD,eAAe/B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}