{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\Project\\\\VS code\\\\movies-api-CA2\\\\reactApp\\\\src\\\\contexts\\\\moviesContext.js\";\nimport React, { useState } from \"react\";\nimport { login, signup, getMovie } from \"../api/movies-api\";\nimport { getFavourites } from \"../api/movies-api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MoviesContext = /*#__PURE__*/React.createContext(null);\nconst MoviesContextProvider = props => {\n  const [favorites, setFavorites] = useState([]);\n  const [myReviews, setMyReviews] = useState({});\n  const [playlist, setplaylist] = useState([]);\n  const [knownFor, setKnownFor] = useState([]);\n  const existingToken = localStorage.getItem(\"token\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [authToken, setAuthToken] = useState(existingToken);\n  const [userName, setUserName] = useState(\"\");\n  const [genres, setGenres] = useState < Array < Array >> [];\n  const addToFavorites = movie => {\n    let newFavorites = [];\n    if (!favorites.includes(movie.id)) {\n      newFavorites = [...favorites, movie.id];\n    } else {\n      newFavorites = [...favorites];\n    }\n    setFavorites(newFavorites);\n  };\n  const addReview = (movie, review) => {\n    setMyReviews({\n      ...myReviews,\n      [movie.id]: review\n    });\n  };\n  const addPlaylist = movie => {\n    let newPlaylist = [];\n    if (!playlist.includes(movie.id)) {\n      newPlaylist = [...playlist, movie.id];\n    } else {\n      newPlaylist = [...playlist];\n    }\n    setplaylist(newPlaylist);\n    console.log(playlist);\n  };\n  const addKnownFor = people => {\n    let newKnownFor = people.known_for;\n    setKnownFor(newKnownFor);\n  };\n\n  //console.log(myReviews);\n  // We will use this function in a later section\n  const removeFromFavorites = movie => {\n    setFavorites(favorites.filter(mId => mId !== movie.id));\n  };\n\n  //AuContext\n  const setToken = data => {\n    localStorage.setItem(\"token\", data);\n    setAuthToken(data);\n  };\n  const authenticate = async (username, password) => {\n    const result = await login(username, password);\n    if (result.token) {\n      setToken(result.token);\n      setIsAuthenticated(true);\n      setUserName(username);\n      getFavourites(username).then(response => {\n        const ids = response.map(response => response.id);\n        setFavorites(ids);\n        let newGenres = [];\n        ids.map(ids => {\n          const {\n            data: genres,\n            error,\n            isLoading,\n            isError\n          } = useQuery([\"movie\", {\n            id: ids\n          }], getMovie);\n          newGenres = [...genres, genres];\n        });\n      });\n    }\n  };\n  const register = async (username, password) => {\n    const result = await signup(username, password);\n    console.log(result.code);\n    return result.code == 201 ? true : false;\n  };\n  const signout = () => {\n    setTimeout(() => setIsAuthenticated(false), 100);\n    setFavorites([]);\n  };\n  return /*#__PURE__*/_jsxDEV(MoviesContext.Provider, {\n    value: {\n      knownFor,\n      favorites,\n      addToFavorites,\n      removeFromFavorites,\n      addReview,\n      addPlaylist,\n      addKnownFor,\n      addToFavorites,\n      setFavorites,\n      isAuthenticated,\n      authenticate,\n      register,\n      signout,\n      userName,\n      setGenres\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 3\n  }, this);\n};\nexport default MoviesContextProvider;","map":{"version":3,"names":["React","useState","login","signup","getMovie","getFavourites","MoviesContext","createContext","MoviesContextProvider","props","favorites","setFavorites","myReviews","setMyReviews","playlist","setplaylist","knownFor","setKnownFor","existingToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","authToken","setAuthToken","userName","setUserName","genres","setGenres","Array","addToFavorites","movie","newFavorites","includes","id","addReview","review","addPlaylist","newPlaylist","console","log","addKnownFor","people","newKnownFor","known_for","removeFromFavorites","filter","mId","setToken","data","setItem","authenticate","username","password","result","token","then","response","ids","map","newGenres","error","isLoading","isError","useQuery","register","code","signout","setTimeout","children"],"sources":["C:/Personal/Project/VS code/movies-api-CA2/reactApp/src/contexts/moviesContext.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { login, signup, getMovie } from \"../api/movies-api\";\nimport { getFavourites } from \"../api/movies-api\";\n\nexport const MoviesContext = React.createContext(null);\n\nconst MoviesContextProvider = (props) => {\n  const [favorites, setFavorites] = useState([])\n  const [myReviews, setMyReviews] = useState({})\n  const [playlist, setplaylist] = useState([])\n  const [knownFor, setKnownFor] = useState([])\n\n  const existingToken = localStorage.getItem(\"token\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [authToken, setAuthToken] = useState(existingToken);\n  const [userName, setUserName] = useState(\"\");\n  const [genres, setGenres] = useState<Array<Array>>([]);\n\n  const addToFavorites = (movie) => {\n    let newFavorites = [];\n    if (!favorites.includes(movie.id)) {\n      newFavorites = [...favorites, movie.id];\n    }\n    else {\n      newFavorites = [...favorites];\n    }\n    setFavorites(newFavorites)\n  };\n\n  const addReview = (movie, review) => {\n    setMyReviews({ ...myReviews, [movie.id]: review })\n  };\n\n  const addPlaylist = (movie) => {\n    let newPlaylist = [];\n    if (!playlist.includes(movie.id)) {\n      newPlaylist = [...playlist, movie.id];\n    }\n    else {\n      newPlaylist = [...playlist];\n    }\n    setplaylist(newPlaylist)\n    console.log(playlist);\n  };\n  const addKnownFor = (people) => {\n    let newKnownFor = people.known_for;\n    setKnownFor(newKnownFor)\n  };\n\n  //console.log(myReviews);\n  // We will use this function in a later section\n  const removeFromFavorites = (movie) => {\n    setFavorites(favorites.filter(\n      (mId) => mId !== movie.id\n    ))\n  };\n\n  //AuContext\n  const setToken = (data) => {\n    localStorage.setItem(\"token\", data);\n    setAuthToken(data);\n  }\n\n\n  const authenticate = async (username, password) => {\n    const result = await login(username, password);\n    if (result.token) {\n      setToken(result.token);\n      setIsAuthenticated(true);\n      setUserName(username);\n      getFavourites(username)\n        .then((response) => {\n          const ids = response.map((response) =>\n            response.id\n          )\n          setFavorites(ids)\n          let newGenres = []\n          ids.map((ids) => {\n            const { data: genres, error, isLoading, isError } = useQuery(\n              [\"movie\", { id: ids }],\n              getMovie\n            );\n            newGenres = [...genres,genres ];\n          }\n\n          )\n          \n          \n          \n    })\n\n  }\n};\n\nconst register = async (username, password) => {\n  const result = await signup(username, password);\n  console.log(result.code);\n  return (result.code == 201) ? true : false;\n};\n\nconst signout = () => {\n  setTimeout(() => setIsAuthenticated(false), 100);\n  setFavorites([]);\n}\n\n\nreturn (\n  <MoviesContext.Provider\n    value={{\n      knownFor,\n      favorites,\n      addToFavorites,\n      removeFromFavorites,\n      addReview,\n      addPlaylist,\n      addKnownFor,\n      addToFavorites,\n      setFavorites,\n      isAuthenticated,\n      authenticate,\n      register,\n      signout,\n      userName,\n      setGenres\n    }}\n  >\n    {props.children}\n  </MoviesContext.Provider>\n);\n};\n\nexport default MoviesContextProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}