{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\Project\\\\VS code\\\\movies-api-CA2\\\\reactApp\\\\src\\\\pages\\\\recommendPage.js\";\nimport React, { useContext } from \"react\";\nimport { getMovies, getMovieById } from \"../api/movies-api\";\nimport PageTemplate from '../components/templateMovieListPage';\nimport { useQuery } from 'react-query';\nimport Spinner from '../components/spinner';\nimport AddToFavoritesIcon from '../components/cardIcons/addToFavorites';\nimport { useParams } from 'react-router-dom';\nimport { MoviesContext } from \"../contexts/moviesContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecommendPage = props => {\n  const context = useContext(MoviesContext);\n  const {\n    page\n  } = useParams();\n  const {\n    data: pages,\n    error,\n    isLoading,\n    isError\n  } = useQuery([\"RecommendPage\"], getMovies);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  const movies = pages;\n  const favorites = movies.filter(m => m.favorite);\n  localStorage.setItem('favorites', JSON.stringify(favorites));\n  let favoriteGneres = [];\n  context.favorites.map(json => {\n    getMovieById(json).then(json => {\n      json.genres.map(response => {\n        if (!favoriteGneres.includes(response)) {\n          favoriteGneres = [...favoriteGneres, response];\n        }\n      });\n    });\n  });\n  const compare = (() => {\n    function compareArray(a, b) {\n      if (a.length !== b.length) {\n        return false;\n      }\n      const length = a.length;\n      for (let i = 0; i < length; i++) {\n        if (!compare(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    function compareObject(a, b) {\n      const keya = Object.keys(a);\n      const keyb = Object.keys(b);\n      if (keya.length !== keyb.length) {\n        return false;\n      }\n      return keya.every(key => {\n        if (!compare(a[key], b[key])) {\n          return false;\n        }\n        return true;\n      });\n    }\n    function compare(a, b) {\n      if (a === b) {\n        return true;\n      }\n      if (typeof a !== typeof b || a === null || b === null) {\n        return false;\n      }\n      if (Array.isArray(a)) {\n        if (!Array.isArray(b)) {\n          return false;\n        }\n        return compareArray(a, b);\n      }\n      if (typeof a === \"object\") {\n        return compareObject(a, b);\n      }\n      return false;\n    }\n    return compare;\n  })();\n  movies.filter(movies => {});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PageTemplate, {\n      title: \"Recommend Movies\",\n      movies: movies,\n      action: movie => {\n        return /*#__PURE__*/_jsxDEV(AddToFavoritesIcon, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 16\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\nexport default RecommendPage;","map":{"version":3,"names":["React","useContext","getMovies","getMovieById","PageTemplate","useQuery","Spinner","AddToFavoritesIcon","useParams","MoviesContext","RecommendPage","props","context","page","data","pages","error","isLoading","isError","message","movies","favorites","filter","m","favorite","localStorage","setItem","JSON","stringify","favoriteGneres","map","json","then","genres","response","includes","compare","compareArray","a","b","length","i","compareObject","keya","Object","keys","keyb","every","key","Array","isArray","movie"],"sources":["C:/Personal/Project/VS code/movies-api-CA2/reactApp/src/pages/recommendPage.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { getMovies , getMovieById } from \"../api/movies-api\";\r\nimport PageTemplate from '../components/templateMovieListPage';\r\nimport { useQuery } from 'react-query';\r\nimport Spinner from '../components/spinner';\r\nimport AddToFavoritesIcon from '../components/cardIcons/addToFavorites'\r\nimport { useParams } from 'react-router-dom';\r\nimport { MoviesContext } from \"../contexts/moviesContext\";\r\n\r\nconst RecommendPage = (props) => {\r\n\r\n  const context = useContext(MoviesContext);\r\n  const { page } = useParams();\r\n  const { data: pages, error, isLoading, isError } = useQuery(\r\n    [\"RecommendPage\"],\r\n    getMovies\r\n  );\r\n  if (isLoading) {\r\n    return <Spinner />\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>\r\n  }  \r\n  const movies = pages;\r\n\r\n  const favorites = movies.filter(m => m.favorite)\r\n  localStorage.setItem('favorites', JSON.stringify(favorites))\r\n\r\n  let favoriteGneres = []\r\n\r\n  context.favorites.map((json)=>{\r\n    getMovieById(json)\r\n    .then((json) => {\r\n        json.genres.map((response)=>{\r\n          if (!favoriteGneres.includes(response)){\r\n            favoriteGneres=[...favoriteGneres,response]\r\n          }\r\n        })\r\n    }\r\n    )\r\n  })\r\n  const compare = (() => {\r\n    function compareArray(a, b) {\r\n        if (a.length !== b.length) {\r\n            return false;\r\n        }\r\n        const length = a.length;\r\n        for (let i = 0; i < length; i++) {\r\n            if (!compare(a[i], b[i])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function compareObject(a, b) {\r\n        const keya = Object.keys(a);\r\n        const keyb = Object.keys(b);\r\n\r\n        if (keya.length !== keyb.length) {\r\n            return false;\r\n        }\r\n\r\n        return keya.every(key => {\r\n            if (!compare(a[key], b[key])) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    function compare(a, b) {\r\n        if (a === b) {\r\n            return true;\r\n        }\r\n\r\n        if (typeof a !== typeof b || a === null || b === null) {\r\n            return false;\r\n        }\r\n\r\n        if (Array.isArray(a)) {\r\n            if (!Array.isArray(b)) {\r\n                return false;\r\n            }\r\n            return compareArray(a, b);\r\n        }\r\n\r\n        if (typeof a === \"object\") {\r\n            return compareObject(a, b);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    return compare;\r\n})();\r\n\r\n  movies.filter((movies)=>{\r\n    \r\n  })\r\n\r\n  return (\r\n    <>\r\n    <PageTemplate\r\n      title=\"Recommend Movies\"\r\n      movies={movies}\r\n      action={(movie) => {\r\n        return <AddToFavoritesIcon movie={movie} />\r\n      }}\r\n    />\r\n    </>\r\n  );\r\n};\r\nexport default RecommendPage;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,SAAS,EAAGC,YAAY,QAAQ,mBAAmB;AAC5D,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,kBAAkB,MAAM,wCAAwC;AACvE,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,2BAA2B;AAAC;AAAA;AAE1D,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAE/B,MAAMC,OAAO,GAAGX,UAAU,CAACQ,aAAa,CAAC;EACzC,MAAM;IAAEI;EAAK,CAAC,GAAGL,SAAS,EAAE;EAC5B,MAAM;IAAEM,IAAI,EAAEC,KAAK;IAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGb,QAAQ,CACzD,CAAC,eAAe,CAAC,EACjBH,SAAS,CACV;EACD,IAAIe,SAAS,EAAE;IACb,oBAAO,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EACpB;EAEA,IAAIC,OAAO,EAAE;IACX,oBAAO;MAAA,UAAKF,KAAK,CAACG;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM;EACjC;EACA,MAAMC,MAAM,GAAGL,KAAK;EAEpB,MAAMM,SAAS,GAAGD,MAAM,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC;EAChDC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACP,SAAS,CAAC,CAAC;EAE5D,IAAIQ,cAAc,GAAG,EAAE;EAEvBjB,OAAO,CAACS,SAAS,CAACS,GAAG,CAAEC,IAAI,IAAG;IAC5B5B,YAAY,CAAC4B,IAAI,CAAC,CACjBC,IAAI,CAAED,IAAI,IAAK;MACZA,IAAI,CAACE,MAAM,CAACH,GAAG,CAAEI,QAAQ,IAAG;QAC1B,IAAI,CAACL,cAAc,CAACM,QAAQ,CAACD,QAAQ,CAAC,EAAC;UACrCL,cAAc,GAAC,CAAC,GAAGA,cAAc,EAACK,QAAQ,CAAC;QAC7C;MACF,CAAC,CAAC;IACN,CAAC,CACA;EACH,CAAC,CAAC;EACF,MAAME,OAAO,GAAG,CAAC,MAAM;IACrB,SAASC,YAAY,CAACC,CAAC,EAAEC,CAAC,EAAE;MACxB,IAAID,CAAC,CAACE,MAAM,KAAKD,CAAC,CAACC,MAAM,EAAE;QACvB,OAAO,KAAK;MAChB;MACA,MAAMA,MAAM,GAAGF,CAAC,CAACE,MAAM;MACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,EAAEC,CAAC,EAAE,EAAE;QAC7B,IAAI,CAACL,OAAO,CAACE,CAAC,CAACG,CAAC,CAAC,EAAEF,CAAC,CAACE,CAAC,CAAC,CAAC,EAAE;UACtB,OAAO,KAAK;QAChB;MACJ;MAEA,OAAO,IAAI;IACf;IAEA,SAASC,aAAa,CAACJ,CAAC,EAAEC,CAAC,EAAE;MACzB,MAAMI,IAAI,GAAGC,MAAM,CAACC,IAAI,CAACP,CAAC,CAAC;MAC3B,MAAMQ,IAAI,GAAGF,MAAM,CAACC,IAAI,CAACN,CAAC,CAAC;MAE3B,IAAII,IAAI,CAACH,MAAM,KAAKM,IAAI,CAACN,MAAM,EAAE;QAC7B,OAAO,KAAK;MAChB;MAEA,OAAOG,IAAI,CAACI,KAAK,CAACC,GAAG,IAAI;QACrB,IAAI,CAACZ,OAAO,CAACE,CAAC,CAACU,GAAG,CAAC,EAAET,CAAC,CAACS,GAAG,CAAC,CAAC,EAAE;UAC1B,OAAO,KAAK;QAChB;QACA,OAAO,IAAI;MACf,CAAC,CAAC;IACN;IAEA,SAASZ,OAAO,CAACE,CAAC,EAAEC,CAAC,EAAE;MACnB,IAAID,CAAC,KAAKC,CAAC,EAAE;QACT,OAAO,IAAI;MACf;MAEA,IAAI,OAAOD,CAAC,KAAK,OAAOC,CAAC,IAAID,CAAC,KAAK,IAAI,IAAIC,CAAC,KAAK,IAAI,EAAE;QACnD,OAAO,KAAK;MAChB;MAEA,IAAIU,KAAK,CAACC,OAAO,CAACZ,CAAC,CAAC,EAAE;QAClB,IAAI,CAACW,KAAK,CAACC,OAAO,CAACX,CAAC,CAAC,EAAE;UACnB,OAAO,KAAK;QAChB;QACA,OAAOF,YAAY,CAACC,CAAC,EAAEC,CAAC,CAAC;MAC7B;MAEA,IAAI,OAAOD,CAAC,KAAK,QAAQ,EAAE;QACvB,OAAOI,aAAa,CAACJ,CAAC,EAAEC,CAAC,CAAC;MAC9B;MAEA,OAAO,KAAK;IAChB;IAEA,OAAOH,OAAO;EAClB,CAAC,GAAG;EAEFhB,MAAM,CAACE,MAAM,CAAEF,MAAM,IAAG,CAExB,CAAC,CAAC;EAEF,oBACE;IAAA,uBACA,QAAC,YAAY;MACX,KAAK,EAAC,kBAAkB;MACxB,MAAM,EAAEA,MAAO;MACf,MAAM,EAAG+B,KAAK,IAAK;QACjB,oBAAO,QAAC,kBAAkB;UAAC,KAAK,EAAEA;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG;MAC7C;IAAE;MAAA;MAAA;MAAA;IAAA;EACF,iBACC;AAEP,CAAC;AACD,eAAezC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}