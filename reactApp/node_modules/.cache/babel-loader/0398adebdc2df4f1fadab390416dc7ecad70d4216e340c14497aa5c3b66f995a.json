{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\Project\\\\VS code\\\\movies-api-CA2\\\\reactApp\\\\src\\\\components\\\\templatePeoplePage\\\\index.js\";\nimport PeopleHeader from \"../headerPeople\";\nimport Grid from \"@mui/material/Grid\";\nimport ImageListItem from \"@mui/material/ImageListItem\";\nimport { getPeopleImages } from \"../../api/movies-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from '../spinner';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport \"../../css/swiper.css\";\nimport KnownForCard from \"../knownForCard/knownForCard\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\nimport React, { useContext } from \"react\";\nimport AddToFavoritesIcon from '../cardIcons/addToFavorites';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TemplatePeoplePage = _ref => {\n  let {\n    people,\n    children\n  } = _ref;\n  const {\n    data,\n    error,\n    isLoading,\n    isError\n  } = useQuery([\"images\", {\n    id: people.id\n  }], getPeopleImages);\n  const context = useContext(MoviesContext);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  const settings = {\n    dots: true,\n    dotsClass: 'slick-dots1',\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n  const images = data.profiles;\n  let displayImages = [];\n  if (images.length > 3) {\n    for (let i = 0; i < 3; i++) {\n      displayImages.push(images[i]);\n    }\n  } else {\n    displayImages = images;\n  }\n  const movies = context.knownFor;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PeopleHeader, {\n      people: people\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 5,\n      sx: {\n        padding: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        sx: {\n          maxHeight: '400'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxHeight: '400'\n          },\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            ...settings,\n            children: displayImages.map(image => /*#__PURE__*/_jsxDEV(ImageListItem, {\n              cols: 1,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://image.tmdb.org/t/p/w500/${image.file_path}`,\n                alt: image.poster_path\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this)\n            }, image.file_path, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Known for following films:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        xl: 2,\n        children: /*#__PURE__*/_jsxDEV(KnownForCard, {\n          movie: movie,\n          action: movie => {\n            return /*#__PURE__*/_jsxDEV(AddToFavoritesIcon, {\n              movie: movie\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 26\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\nexport default TemplatePeoplePage;","map":{"version":3,"names":["PeopleHeader","Grid","ImageListItem","getPeopleImages","useQuery","Spinner","Slider","KnownForCard","MoviesContext","React","useContext","AddToFavoritesIcon","TemplatePeoplePage","people","children","data","error","isLoading","isError","id","context","message","settings","dots","dotsClass","infinite","speed","slidesToShow","slidesToScroll","images","profiles","displayImages","length","i","push","movies","knownFor","padding","maxHeight","map","image","file_path","poster_path","movie"],"sources":["C:/Personal/Project/VS code/movies-api-CA2/reactApp/src/components/templatePeoplePage/index.js"],"sourcesContent":["import PeopleHeader from \"../headerPeople\";\nimport Grid from \"@mui/material/Grid\";\nimport ImageListItem from \"@mui/material/ImageListItem\";\nimport { getPeopleImages } from \"../../api/movies-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from '../spinner'\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport \"../../css/swiper.css\"\nimport KnownForCard from \"../knownForCard/knownForCard\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\nimport React, { useContext } from \"react\";\nimport AddToFavoritesIcon from '../cardIcons/addToFavorites'\n\n\nconst TemplatePeoplePage = ({ people, children }) => {\n  const { data , error, isLoading, isError } = useQuery(\n    [\"images\", { id: people.id }],\n    getPeopleImages\n  );\n  const context = useContext(MoviesContext)\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n\n\n  const settings = {\n    dots: true,\n    dotsClass:'slick-dots1',\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n  };\n\n  const images = data.profiles\n  let displayImages=[]\n  if(images.length>3){\n    for(let i=0;i<3;i++){\n      displayImages.push(images[i]);\n    }\n  }\n  else{\n    displayImages=images;\n  }\n\n  const movies=context.knownFor;\n\n  return (\n    <>\n      <PeopleHeader people={people} />\n\n      <Grid container spacing={5} sx={{ padding: \"15px\" }}>\n        <Grid item xs={3} sx={{maxHeight:'400'}}>\n          <div style={{maxHeight:'400'}}>\n            <Slider {...settings}>\n            \n                {displayImages.map((image) => (\n                    <ImageListItem key={image.file_path} cols={1}>\n                    <img\n                        src={`https://image.tmdb.org/t/p/w500/${image.file_path}`}\n                        alt={image.poster_path}\n                        \n                    />\n                    </ImageListItem>\n                ))}\n\n            </Slider>\n          </div>\n        </Grid>\n\n        <Grid item xs={9}>\n          {children}\n        </Grid>\n        <Grid item xs={12}>\n          <h1>Known for following films:</h1>\n        </Grid>\n        \n          {movies.map((movie) => (\n            <Grid key={movie.id} item xs={12} sm={6} md={4} lg={3} xl={2}>\n              <KnownForCard movie={movie} \n                action={(movie) => {\n                  return <AddToFavoritesIcon movie={movie} />\n              }} />\n            </Grid>\n          ))}\n        \n      </Grid>\n    </>\n  );\n};\n\nexport default TemplatePeoplePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}