{"ast":null,"code":"export const login = (username, password) => {\n  return fetch('/api/users', {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then(res => res.json());\n};\nexport const signup = (username, password) => {\n  return fetch('/api/users?action=register', {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then(res => res.json());\n};\nexport const addFavourite = (username, id) => {\n  return fetch(`/api/users/${username}/favourites`, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    body: JSON.stringify({\n      id\n    })\n  }).then(res => res.json());\n};\nexport const getFavourites = username => {\n  return fetch(`api/users/${username}/favourites`, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'get'\n  }).then(res => res.json());\n};\nexport const deleteFavourite = (username, movie) => {\n  return fetch(`/api/users/${username}/movie/${movie.id}/favourites`, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post'\n  }).then(res => res.json());\n};\nexport const getGenres = () => {\n  return fetch('/api/genres').then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getTopRatedMovies = _ref => {\n  let {\n    queryKey\n  } = _ref;\n  const [, pagePart] = queryKey;\n  const {\n    page\n  } = pagePart;\n  return fetch(`/api/movies/topRated/${page}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getUpcomingMovies = _ref2 => {\n  let {\n    queryKey\n  } = _ref2;\n  const [, pagePart] = queryKey;\n  const {\n    page\n  } = pagePart;\n  return fetch(`/api/movies/upcoming/${page}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getMovies = () => {\n  return fetch(`/api/movies/`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getMovieImages = _ref3 => {\n  let {\n    queryKey\n  } = _ref3;\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/movies/${id}/movie/images`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getPeoples = _ref4 => {\n  let {\n    queryKey\n  } = _ref4;\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/peoples/popular/${id}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getPeople = args => {\n  // console.log(args)\n  const [, idPart] = args.queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/peoples/${id}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getPeopleImages = _ref5 => {\n  let {\n    queryKey\n  } = _ref5;\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/peoples/${id}/images`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getMoviesByPage = _ref6 => {\n  let {\n    queryKey\n  } = _ref6;\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/movies/page/${id}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getMovie = args => {\n  const [, idPart] = args.queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/movies/tmdb/movie/${id}`, {\n    headers: {\n      'Authorization': window.localStorage.getItem('token')\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getMovieById = id => {\n  return fetch(`/api/movies/${id}`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"names":["login","username","password","fetch","headers","method","body","JSON","stringify","then","res","json","signup","addFavourite","id","getFavourites","deleteFavourite","movie","getGenres","catch","error","console","log","getTopRatedMovies","queryKey","pagePart","page","response","ok","Error","message","getUpcomingMovies","getMovies","getMovieImages","idPart","getPeoples","getPeople","args","getPeopleImages","getMoviesByPage","getMovie","window","localStorage","getItem","getMovieById"],"sources":["C:/Personal/Project/VS code/movies-api-CA2/reactApp/src/api/movies-api.js"],"sourcesContent":["export const login = (username, password) => {\r\n    return fetch('/api/users', {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'post',\r\n        body: JSON.stringify({ username: username, password: password })\r\n    }).then(res => res.json())\r\n};\r\n\r\nexport const signup = (username, password) => {\r\n    return fetch('/api/users?action=register', {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'post',\r\n        body: JSON.stringify({ username: username, password: password })\r\n    }).then(res => res.json())\r\n};\r\n\r\nexport const addFavourite = (username, id) => {\r\n    return fetch(`/api/users/${username}/favourites`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'post',\r\n        body: JSON.stringify({ id })\r\n    }).then(res => res.json())\r\n};\r\n\r\nexport const getFavourites = (username) => {\r\n    return fetch(`api/users/${username}/favourites`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'get',\r\n    }).then(res => res.json())\r\n};\r\n\r\nexport const deleteFavourite = (username, movie) => {\r\n    return fetch(`/api/users/${username}/movie/${movie.id}/favourites`, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'post'\r\n    }).then(res => res.json())\r\n};\r\n\r\nexport const getGenres = () => {\r\n    return fetch(\r\n        '/api/genres',\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getTopRatedMovies = ({ queryKey }) => {\r\n    const [, pagePart] = queryKey;\r\n    const { page } = pagePart;\r\n    return fetch(`/api/movies/topRated/${page}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getUpcomingMovies = ({ queryKey }) => {\r\n    const [, pagePart] = queryKey;\r\n    const { page } = pagePart;\r\n    return fetch(`/api/movies/upcoming/${page}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getMovies = () => {\r\n    return fetch(\r\n        `/api/movies/`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getMovieImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `/api/movies/${id}/movie/images`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getPeoples = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `/api/peoples/popular/${id}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getPeople = (args) => {\r\n    // console.log(args)\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `/api/peoples/${id}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\n\r\nexport const getPeopleImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `/api/peoples/${id}/images`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\n\r\nexport const getMoviesByPage = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n\r\n    return fetch(\r\n        `/api/movies/page/${id}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getMovie = (args) => {\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n      `/api/movies/tmdb/movie/${id}`,{\r\n        headers: {\r\n            'Authorization': window.localStorage.getItem('token')\r\n        }\r\n      }\r\n    ).then(res => {\r\n      return res.json();\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const getMovieById = (id) => {\r\n    return fetch(\r\n      `/api/movies/${id}`\r\n    ).then(res => {\r\n      return res.json();\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}