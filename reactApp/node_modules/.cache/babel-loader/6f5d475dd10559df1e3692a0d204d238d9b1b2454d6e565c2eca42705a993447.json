{"ast":null,"code":"export const login = (username, password) => {\n  return fetch('/api/users', {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then(res => res.json());\n};\nexport const signup = (username, password) => {\n  return fetch('/api/users?action=register', {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then(res => res.json());\n};\nexport const getMovie = args => {\n  const [, idPart] = args.queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/movies/${id}`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getMovieImages = args => {\n  const [, idPart] = args.queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/movies/tmdb/movie/${id}/images`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getPerson = args => {\n  const [, idPart] = args.queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/actors/${id}`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getPersonImages = _ref => {\n  let {\n    queryKey\n  } = _ref;\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/actors/${id}/images`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getPopularPeople = () => {\n  return fetch(`/api/actors/popular`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getPersonMovies = _ref2 => {\n  let {\n    queryKey\n  } = _ref2;\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/actors/${id}/movies`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getGenres = () => {\n  return fetch('/api/genres').then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"names":["login","username","password","fetch","headers","method","body","JSON","stringify","then","res","json","signup","getMovie","args","idPart","queryKey","id","catch","error","console","log","getMovieImages","getPerson","getPersonImages","getPopularPeople","getPersonMovies","getGenres"],"sources":["C:/Personal/Project/VS code/movies-api-CA2/reactApp/src/api/movies-api.js"],"sourcesContent":["export const login = (username, password) => {\r\n    return fetch('/api/users', {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'post',\r\n        body: JSON.stringify({ username: username, password: password })\r\n    }).then(res => res.json())\r\n};\r\n\r\nexport const signup = (username, password) => {\r\n    return fetch('/api/users?action=register', {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'post',\r\n        body: JSON.stringify({ username: username, password: password })\r\n    }).then(res => res.json())\r\n};\r\n\r\n\r\n\r\n\r\nexport const getMovie = (args) => {\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `/api/movies/${id}`\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getMovieImages = (args) => {\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `/api/movies/tmdb/movie/${id}/images`\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getPerson = (args) => {\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `/api/actors/${id}`\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getPersonImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `/api/actors/${id}/images`\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getPopularPeople = () => {\r\n    return fetch(\r\n        `/api/actors/popular`\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getPersonMovies = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `/api/actors/${id}/movies`\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getGenres = () => {\r\n    return fetch(\r\n        '/api/genres',\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}