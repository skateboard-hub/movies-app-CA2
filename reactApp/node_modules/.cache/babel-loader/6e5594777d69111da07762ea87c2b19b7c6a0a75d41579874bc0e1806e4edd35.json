{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\Project\\\\VS code\\\\movies-api-CA2\\\\reactApp\\\\src\\\\pages\\\\recommendPage.js\";\nimport React, { useContext } from \"react\";\nimport { getMovies, getMovieById } from \"../api/movies-api\";\nimport PageTemplate from '../components/templateMovieListPage';\nimport { useQuery } from 'react-query';\nimport Spinner from '../components/spinner';\nimport AddToFavoritesIcon from '../components/cardIcons/addToFavorites';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Pagination from '@mui/material/Pagination';\nimport PaginationItem from '@mui/material/PaginationItem';\nimport { MoviesContext } from \"../contexts/moviesContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecommendPage = props => {\n  const context = useContext(MoviesContext);\n  const {\n    page\n  } = useParams();\n  const {\n    data: pages,\n    error,\n    isLoading,\n    isError\n  } = useQuery([\"RecommendPage\", {\n    page: page\n  }], getMovies);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  const movies = pages;\n  const favorites = movies.filter(m => m.favorite);\n  localStorage.setItem('favorites', JSON.stringify(favorites));\n  context.favorites.map(json => {\n    console.log(json);\n    getMovieById(json).then(json => {\n      console.log(json.genres);\n    }).then(response => {\n      const ids = response.map(response => response.id);\n      setFavorites(ids);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTemplate, {\n      title: \"Recommend Movies\",\n      movies: movies,\n      action: movie => {\n        return /*#__PURE__*/_jsxDEV(AddToFavoritesIcon, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      page: page,\n      count: 15,\n      renderItem: m => /*#__PURE__*/_jsxDEV(PaginationItem, {\n        component: Link,\n        to: `/${m.page === 1 ? '' : `moviespage/${Number(m.page)}`}`,\n        ...m\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\nexport default RecommendPage;","map":{"version":3,"names":["React","useContext","getMovies","getMovieById","PageTemplate","useQuery","Spinner","AddToFavoritesIcon","useParams","Link","Pagination","PaginationItem","MoviesContext","RecommendPage","props","context","page","data","pages","error","isLoading","isError","message","movies","favorites","filter","m","favorite","localStorage","setItem","JSON","stringify","map","json","console","log","then","genres","response","ids","id","setFavorites","movie","display","justifyContent","Number"],"sources":["C:/Personal/Project/VS code/movies-api-CA2/reactApp/src/pages/recommendPage.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { getMovies , getMovieById } from \"../api/movies-api\";\r\nimport PageTemplate from '../components/templateMovieListPage';\r\nimport { useQuery } from 'react-query';\r\nimport Spinner from '../components/spinner';\r\nimport AddToFavoritesIcon from '../components/cardIcons/addToFavorites'\r\nimport { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport PaginationItem from '@mui/material/PaginationItem';\r\nimport { MoviesContext } from \"../contexts/moviesContext\";\r\n\r\nconst RecommendPage = (props) => {\r\n\r\n  const context = useContext(MoviesContext);\r\n  const { page } = useParams();\r\n  const { data: pages, error, isLoading, isError } = useQuery(\r\n    [\"RecommendPage\", { page: page }],\r\n    getMovies\r\n  );\r\n  if (isLoading) {\r\n    return <Spinner />\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>\r\n  }  \r\n  const movies = pages;\r\n\r\n  const favorites = movies.filter(m => m.favorite)\r\n  localStorage.setItem('favorites', JSON.stringify(favorites))\r\n\r\n  context.favorites.map((json)=>{\r\n    console.log(json)\r\n    getMovieById(json)\r\n    .then((json) => {\r\n        console.log(json.genres)\r\n    })\r\n    .then((response) => {\r\n      const ids = response.map((response)=>\r\n        response.id\r\n      ) \r\n      \r\n      setFavorites(ids)\r\n      \r\n  })\r\n  })\r\n\r\n\r\n  return (\r\n    <>\r\n    <PageTemplate\r\n      title=\"Recommend Movies\"\r\n      movies={movies}\r\n      action={(movie) => {\r\n        return <AddToFavoritesIcon movie={movie} />\r\n      }}\r\n    />\r\n    <Pagination\r\n      sx={{ display: 'flex', justifyContent: 'center'}}\r\n      page={page}\r\n      count={15}\r\n      renderItem={(m) => (\r\n        <PaginationItem\r\n          component={Link}\r\n          to={`/${m.page === 1 ? '' : `moviespage/${Number(m.page)}`}`}\r\n          {...m}\r\n        />\r\n      )}\r\n    />\r\n    </>\r\n  );\r\n};\r\nexport default RecommendPage;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,SAAS,EAAGC,YAAY,QAAQ,mBAAmB;AAC5D,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,kBAAkB,MAAM,wCAAwC;AACvE,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,aAAa,QAAQ,2BAA2B;AAAC;AAAA;AAE1D,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAE/B,MAAMC,OAAO,GAAGd,UAAU,CAACW,aAAa,CAAC;EACzC,MAAM;IAAEI;EAAK,CAAC,GAAGR,SAAS,EAAE;EAC5B,MAAM;IAAES,IAAI,EAAEC,KAAK;IAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGhB,QAAQ,CACzD,CAAC,eAAe,EAAE;IAAEW,IAAI,EAAEA;EAAK,CAAC,CAAC,EACjCd,SAAS,CACV;EACD,IAAIkB,SAAS,EAAE;IACb,oBAAO,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EACpB;EAEA,IAAIC,OAAO,EAAE;IACX,oBAAO;MAAA,UAAKF,KAAK,CAACG;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM;EACjC;EACA,MAAMC,MAAM,GAAGL,KAAK;EAEpB,MAAMM,SAAS,GAAGD,MAAM,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC;EAChDC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACP,SAAS,CAAC,CAAC;EAE5DT,OAAO,CAACS,SAAS,CAACQ,GAAG,CAAEC,IAAI,IAAG;IAC5BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB9B,YAAY,CAAC8B,IAAI,CAAC,CACjBG,IAAI,CAAEH,IAAI,IAAK;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACI,MAAM,CAAC;IAC5B,CAAC,CAAC,CACDD,IAAI,CAAEE,QAAQ,IAAK;MAClB,MAAMC,GAAG,GAAGD,QAAQ,CAACN,GAAG,CAAEM,QAAQ,IAChCA,QAAQ,CAACE,EAAE,CACZ;MAEDC,YAAY,CAACF,GAAG,CAAC;IAErB,CAAC,CAAC;EACF,CAAC,CAAC;EAGF,oBACE;IAAA,wBACA,QAAC,YAAY;MACX,KAAK,EAAC,kBAAkB;MACxB,MAAM,EAAEhB,MAAO;MACf,MAAM,EAAGmB,KAAK,IAAK;QACjB,oBAAO,QAAC,kBAAkB;UAAC,KAAK,EAAEA;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG;MAC7C;IAAE;MAAA;MAAA;MAAA;IAAA,QACF,eACF,QAAC,UAAU;MACT,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAQ,CAAE;MACjD,IAAI,EAAE5B,IAAK;MACX,KAAK,EAAE,EAAG;MACV,UAAU,EAAGU,CAAC,iBACZ,QAAC,cAAc;QACb,SAAS,EAAEjB,IAAK;QAChB,EAAE,EAAG,IAAGiB,CAAC,CAACV,IAAI,KAAK,CAAC,GAAG,EAAE,GAAI,cAAa6B,MAAM,CAACnB,CAAC,CAACV,IAAI,CAAE,EAAE,EAAE;QAAA,GACzDU;MAAC;QAAA;QAAA;QAAA;MAAA;IAEP;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACC;AAEP,CAAC;AACD,eAAeb,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}