{"ast":null,"code":"export const login = (username, password) => {\n  return fetch('/api/users', {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then(res => res.json());\n};\nexport const signup = (username, password) => {\n  return fetch('/api/users?action=register', {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then(res => res.json());\n};\nexport const getMovies = () => {\n  return fetch('/api/movies', {\n    headers: {\n      'Authorization': window.localStorage.getItem('token')\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getMovieImages = args => {\n  const [, idPart] = args.queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/movies/tmdb/movie/${id}/images`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getUserFavourites = username => {\n  return fetch(`/api/users/${username}/favourites`, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'get'\n  }).then(res => res.json());\n};\nexport const addToUserFavourites = (username, id) => {\n  return fetch(`/api/users/${username}/favourites`, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    body: JSON.stringify({\n      id: id\n    })\n  }).then(res => res.json());\n};\nexport const removeFromUserFavourites = (username, id) => {\n  return fetch(`/api/users/${username}/favourites/remove`, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    body: JSON.stringify({\n      id: id\n    })\n  }).then(res => {\n    return res.json();\n  });\n};\nexport const getTopRatedMovies = _ref => {\n  let {\n    queryKey\n  } = _ref;\n  const [, pageNum] = queryKey;\n  const {\n    page\n  } = pageNum;\n  return fetch(`/api/movies/tmdb/topRated/${page}`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getPerson = args => {\n  const [, idPart] = args.queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/actors/${id}`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getPopularPeople = () => {\n  return fetch(`/api/actors/popular`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getPersonImages = _ref2 => {\n  let {\n    queryKey\n  } = _ref2;\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/actors/${id}/images`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"names":["login","username","password","fetch","headers","method","body","JSON","stringify","then","res","json","signup","getMovies","window","localStorage","getItem","catch","error","console","log","getMovieImages","args","idPart","queryKey","id","getUserFavourites","addToUserFavourites","removeFromUserFavourites","getTopRatedMovies","pageNum","page","getPerson","getPopularPeople","getPersonImages"],"sources":["C:/Personal/Project/VS code/movies-api-CA2/reactApp/src/api/movies-api.js"],"sourcesContent":["export const login = (username, password) => {\r\n    return fetch('/api/users', {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'post',\r\n        body: JSON.stringify({ username: username, password: password })\r\n    }).then(res => res.json())\r\n};\r\n\r\nexport const signup = (username, password) => {\r\n    return fetch('/api/users?action=register', {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'post',\r\n        body: JSON.stringify({ username: username, password: password })\r\n    }).then(res => res.json())\r\n};\r\n\r\nexport const getMovies = () => {\r\n    return fetch(\r\n       '/api/movies', {\r\n            headers: {\r\n                'Authorization': window.localStorage.getItem('token')\r\n            }\r\n        }\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getMovieImages = (args) => {\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n      `/api/movies/tmdb/movie/${id}/images`\r\n    ).then(res => {\r\n      return res.json();\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n  \r\nexport const getUserFavourites = (username) => {\r\n    return fetch(`/api/users/${username}/favourites`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'get',\r\n    }).then(res => res.json())\r\n};\r\n\r\nexport const addToUserFavourites = (username, id) => {\r\n    return fetch(`/api/users/${username}/favourites`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'post',\r\n        body: JSON.stringify({ id: id })\r\n    }).then(res => res.json())\r\n};\r\nexport const removeFromUserFavourites = (username, id) => {\r\n    return fetch(`/api/users/${username}/favourites/remove`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'post',\r\n        body: JSON.stringify({ id: id })\r\n    }).then(res => {\r\n        return res.json()\r\n    })\r\n};\r\n\r\n\r\nexport const getTopRatedMovies = ({ queryKey }) => {\r\n    const [, pageNum] = queryKey;\r\n    const { page } = pageNum;\r\n    return fetch(\r\n      `/api/movies/tmdb/topRated/${page}`,\r\n    ).then(res => {\r\n       return res.json();\r\n    }).catch((error) => {\r\n       console.log(error);\r\n    });\r\n  };\r\n\r\n  export const getPerson = (args) => {\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n      `/api/actors/${id}`\r\n    ).then(res => {\r\n      return res.json();\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n  \r\n  export const getPopularPeople = () => {\r\n    return fetch(\r\n      `/api/actors/popular`\r\n    ).then(res => {\r\n      return res.json();\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n  \r\n  export const getPersonImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n      `/api/actors/${id}/images`\r\n    ).then(res => {\r\n      return res.json();\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}