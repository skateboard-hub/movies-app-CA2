{"ast":null,"code":"export const login = (username, password) => {\n  return fetch('/api/users', {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then(res => res.json());\n};\nexport const signup = (username, password) => {\n  return fetch('/api/users?action=register', {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then(res => res.json());\n};\nexport const addFavourite = (username, id) => {\n  return fetch(`/api/users/${username}/favourites`, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    body: JSON.stringify({\n      id\n    })\n  }).then(res => res.json());\n};\nexport const getFavourites = username => {\n  return fetch(`/api/users/${username}/favourites`, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'get'\n  }).then(res => res.json());\n};\nexport const deleteFavourites = (username, id) => {\n  return fetch(`/api/users/${username}/favourites/remove`, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    body: JSON.stringify({\n      id: id\n    })\n  }).then(res => {\n    return res.json();\n  });\n};\nexport const getUpcomingMovies = args => {\n  const [, pageNum] = args.queryKey;\n  const {\n    page\n  } = pageNum;\n  return fetch(`/api/movies/tmdb/upcoming/${page}`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getTopRatedMovies = _ref => {\n  let {\n    queryKey\n  } = _ref;\n  const [, pageNum] = queryKey;\n  const {\n    page\n  } = pageNum;\n  return fetch(`/api/movies/tmdb/topRated/${page}`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getMovie = args => {\n  const [, idPart] = args.queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/movies/${id}`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getMovieImages = args => {\n  const [, idPart] = args.queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/movies/tmdb/movie/${id}/images`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getPerson = args => {\n  const [, idPart] = args.queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/actors/${id}`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getPersonImages = _ref2 => {\n  let {\n    queryKey\n  } = _ref2;\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/actors/${id}/images`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getPopularPeople = () => {\n  return fetch(`/api/actors/popular`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getPersonMovies = _ref3 => {\n  let {\n    queryKey\n  } = _ref3;\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`/api/actors/${id}/movies`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getGenres = () => {\n  return fetch('/api/genres').then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const addReview = (username, movie, review) => {\n  return fetch(`/api/reviews/movie/${movie.id}/reviews/${username}`, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    body: JSON.stringify({\n      author: review.author,\n      movieId: movie.id,\n      content: review.content,\n      rating: review.rating\n    })\n  }).then(res => res.json());\n};\nexport const getMovieReviews = async id => {\n  return fetch(`/api/reviews/movie/${id}/reviews`).then(res => {\n    return res.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"names":["login","username","password","fetch","headers","method","body","JSON","stringify","then","res","json","signup","addFavourite","id","getFavourites","deleteFavourites","getUpcomingMovies","args","pageNum","queryKey","page","catch","error","console","log","getTopRatedMovies","getMovie","idPart","getMovieImages","getPerson","getPersonImages","getPopularPeople","getPersonMovies","getGenres","addReview","movie","review","author","movieId","content","rating","getMovieReviews"],"sources":["C:/Personal/Project/VS code/movies-api-CA2/reactApp/src/api/movies-api.js"],"sourcesContent":["export const login = (username, password) => {\r\n    return fetch('/api/users', {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'post',\r\n        body: JSON.stringify({ username: username, password: password })\r\n    }).then(res => res.json())\r\n};\r\n\r\nexport const signup = (username, password) => {\r\n    return fetch('/api/users?action=register', {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'post',\r\n        body: JSON.stringify({ username: username, password: password })\r\n    }).then(res => res.json())\r\n};\r\n\r\n\r\nexport const addFavourite = (username, id) => {\r\n    return fetch(`/api/users/${username}/favourites`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'post',\r\n        body: JSON.stringify({ id })\r\n    }).then(res => res.json())\r\n};\r\n\r\nexport const getFavourites = (username) => {\r\n    return fetch(`/api/users/${username}/favourites`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'get',\r\n    }).then(res => res.json())\r\n};\r\n\r\nexport const deleteFavourites = (username, id) => {\r\n    return fetch(`/api/users/${username}/favourites/remove`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'post',\r\n        body: JSON.stringify({ id: id })\r\n    }).then(res => {\r\n        return res.json()\r\n    })\r\n};\r\n\r\n\r\nexport const getUpcomingMovies = (args) => {\r\n    const [, pageNum] = args.queryKey;\r\n    const { page } = pageNum;\r\n    return fetch(\r\n        `/api/movies/tmdb/upcoming/${page}`,\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getTopRatedMovies = ({ queryKey }) => {\r\n    const [, pageNum] = queryKey;\r\n    const { page } = pageNum;\r\n    return fetch(\r\n        `/api/movies/tmdb/topRated/${page}`,\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getMovie = (args) => {\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `/api/movies/${id}`\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getMovieImages = (args) => {\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `/api/movies/tmdb/movie/${id}/images`\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getPerson = (args) => {\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `/api/actors/${id}`\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getPersonImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `/api/actors/${id}/images`\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getPopularPeople = () => {\r\n    return fetch(\r\n        `/api/actors/popular`\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getPersonMovies = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `/api/actors/${id}/movies`\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const getGenres = () => {\r\n    return fetch(\r\n        '/api/genres',\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\nexport const addReview = (username, movie, review) => {\r\n    return fetch(`/api/reviews/movie/${movie.id}/reviews/${username}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'post',\r\n        body: JSON.stringify({ author: review.author, movieId: movie.id, content: review.content, rating: review.rating })\r\n    }).then(res => res.json())\r\n};\r\n\r\nexport const getMovieReviews = async (id) => {\r\n    return fetch(\r\n        `/api/reviews/movie/${id}/reviews`\r\n    ).then(res => {\r\n        return res.json();\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}